{
    "pipes": [],
    "interfaces": [
        {
            "name": "Chainable",
            "id": "interface-Chainable-7ddccb50f660255362ec61afb256b68be2094534eafd4063272f5a6210a44c5f922a162c5543dbc3368408cc5a3ea83babdf0eb1a93f55351a915fdcd48f791b",
            "file": "cypress/support/component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import './commands';\n\n// Alternatively you can use CommonJS syntax:\n// require('./commands')\n\nimport { mount } from 'cypress/angular';\n\n// Augment the Cypress namespace to include type definitions for\n// your custom command.\n// Alternatively, can be defined in cypress/support/component.d.ts\n// with a <reference path=\"./component\" /> at the top of your spec.\ndeclare global {\n  namespace Cypress {\n    interface Chainable {\n      mount: typeof mount;\n    }\n  }\n}\n\nCypress.Commands.add('mount', mount);\n\n// Example use:\n// cy.mount(MyComponent)\n",
            "properties": [
                {
                    "name": "mount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "HealthMetrics",
            "id": "interface-HealthMetrics-75be0f46e53e8d44085e31afd11cd6cc8fedf3d736845ae0d16866f49a5dd9b0aa2c86e8af5be8cefffc530a116af5ef7eebf74bd29c7ea85823082cbd8e86b5",
            "file": "src/app/core/health-metrics.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface HealthMetrics {\n  status: 'UP' | 'DOWN';\n}\n",
            "properties": [
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"UP\" | \"DOWN\"",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "UserMetrics",
            "id": "interface-UserMetrics-4cd26817552ff32f70999e13bce9f7eb0a6bb8e0843200384658cebf387e862f2a02d838d9c36e9f84ced7aea73979569165536b68a269ebb88799b3e4e94be1",
            "file": "src/app/core/user-metrics.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface UserMetrics {\n  users: number;\n}\n",
            "properties": [
                {
                    "name": "users",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "TelemetryService",
            "id": "injectable-TelemetryService-5b7dcbea107de2bc347f0354d02e170efb3f3623014ccfc12defaf9a3c51ede04ee0f36af3e7abff2a5e368d814720bf6894641e92abd5e2686ae8d260a69622",
            "file": "src/app/core/telemetry.service.ts",
            "properties": [
                {
                    "name": "HEALTH_ENDPOINT",
                    "defaultValue": "environment.telemetryUrl + 'health'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        121,
                        124,
                        144
                    ]
                },
                {
                    "name": "USERS_ENDPOINT",
                    "defaultValue": "environment.telemetryUrl + 'users'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        121,
                        124,
                        144
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getHealthMetrics",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getUserMetrics",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { HealthMetrics } from './health-metrics';\nimport { UserMetrics } from './user-metrics';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TelemetryService {\n  private static readonly HEALTH_ENDPOINT = environment.telemetryUrl + 'health';\n  private static readonly USERS_ENDPOINT = environment.telemetryUrl + 'users';\n\n  constructor(private http: HttpClient) {}\n\n  public getHealthMetrics() {\n    return this.http.get<HealthMetrics>(TelemetryService.HEALTH_ENDPOINT);\n  }\n\n  public getUserMetrics() {\n    return this.http.get<UserMetrics>(TelemetryService.USERS_ENDPOINT);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-f7246eb4923d27635152e4f6e375c8b00c3b0318fd02d75cfd3204bdfd8cb6f38e461f04c16e9c103c95ca83ef5aeaa9a23a759c480f8bd1e5f1dbbb381e4eb1",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<nav-bar></nav-bar>\n<router-outlet></router-outlet>\n"
        },
        {
            "name": "HomeComponent",
            "id": "component-HomeComponent-046e4f0671dccf3d4cfddd69fa24f4444929305aa7cc5ee3f56de24f4d237489a40486f6e54b2e564fdd1e5612d7a8a6b0fc6e2efb72549599a5e49f1201209b",
            "file": "src/app/home/home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-home",
            "styleUrls": [
                "./home.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./home.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "appStatus$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<\"UP\" | \"DOWN\">",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "userCount$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<number>",
                    "optional": true,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { TelemetryService } from '../core/telemetry.service';\nimport { Observable, pluck } from 'rxjs';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  appStatus$?: Observable<'UP' | 'DOWN'>;\n  userCount$?: Observable<number>;\n\n  constructor(private metrics: TelemetryService) {}\n\n  ngOnInit(): void {\n    this.userCount$ = this.metrics.getUserMetrics().pipe(pluck('users'));\n    this.appStatus$ = this.metrics.getHealthMetrics().pipe(pluck('status'));\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./home.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "metrics",
                        "type": "TelemetryService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "metrics",
                        "type": "TelemetryService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "Status: {{ appStatus$ | async }}\n\nUsers: {{ userCount$ | async }}\n"
        },
        {
            "name": "NavBarComponent",
            "id": "component-NavBarComponent-d9dd4e4143a97c0fa2cd039085df22b00ee75963f03ce0c5d6f45d4482da15a620f1e707a633b8de4ab83ee55862b302d3b5296247737505fb4173c901b9cd71",
            "file": "src/app/core/nav-bar/nav-bar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "nav-bar",
            "styleUrls": [
                "./nav-bar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./nav-bar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.scss']\n})\nexport class NavBarComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./nav-bar.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<p>nav-bar works!</p>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-336eb11756e7f724523251edb711ba42891107cc8175adb876abab6b22009a630935c79327f7f19748abe3354f6d1af3d9508692feeda601daa3d5f3636a5be6",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { CoreModule } from './core/core.module';\n\n@NgModule({\n  declarations: [AppComponent, HomeComponent],\n  imports: [BrowserModule, CoreModule],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "HomeComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CoreModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-2fe13972b5f6f6f6733582ddffe8b0a399aa7534e1d0d9e5da901aa55fe5ebed67be7aa145ad3536f2ae9999f84e6304c674808a3f2d50ccc0a4a300d173e6e8",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/core/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from '../home/home.component';\n\nconst routes: Routes = [{ path: '', component: HomeComponent }];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CoreModule",
            "id": "module-CoreModule-10fa94f0d17207adcfc19e5bdbdde76101eb8344168c4acab7ac6451600c414c3770e5c4b165e6b89476d9ff839911c478235030f7186a9499ed8c797b20c250",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/core/core.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { CommonModule } from '@angular/common';\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [NavBarComponent],\n  imports: [\n    CommonModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule\n  ],\n  exports: [AppRoutingModule, NavBarComponent, BrowserAnimationsModule]\n})\nexport class CoreModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "NavBarComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "NavBarComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SharedModule",
            "id": "module-SharedModule-8793833f160a1a5ac2cd0106f63f9295cd0b756f6c5444ccf07a9f6606b28c943090d93f41fbd2997f8d3aee809cdc2eb4b4116dbc131234a94f980ff0fe9773",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/shared.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule],\n  exports: [CommonModule]\n})\nexport class SharedModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true,\n  apiUrl: 'http://localhost:8080/api/',\n  telemetryUrl: 'http://localhost:8080/api/metrics/'\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false,\n  apiUrl: 'http://localhost:4200/api/',\n  telemetryUrl: 'http://localhost:4200/api/metrics/'\n}"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true,\n  apiUrl: 'http://localhost:8080/api/',\n  telemetryUrl: 'http://localhost:8080/api/metrics/'\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false,\n  apiUrl: 'http://localhost:4200/api/',\n  telemetryUrl: 'http://localhost:4200/api/metrics/'\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/core/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "",
                        "component": "HomeComponent"
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "cypress/support/component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Chainable",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/health-metrics.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "HealthMetrics",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/nav-bar/nav-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavBarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/telemetry.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TelemetryService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/user-metrics.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "UserMetrics",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/home/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}