{
    "pipes": [],
    "interfaces": [
        {
            "name": "Chainable",
            "id": "interface-Chainable-016c9350f1e39f8af35cea5d5577a07ffc3a0d411fdf26a66b86d825641addd2d614caa16786d12cde6817daed6e0db393388630a8d8f4001ffc55c405c44f98",
            "file": "cypress/support/component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import './commands';\r\n\r\n// Alternatively you can use CommonJS syntax:\r\n// require('./commands')\r\n\r\nimport { mount } from 'cypress/angular';\r\n\r\n// Augment the Cypress namespace to include type definitions for\r\n// your custom command.\r\n// Alternatively, can be defined in cypress/support/component.d.ts\r\n// with a <reference path=\"./component\" /> at the top of your spec.\r\ndeclare global {\r\n  namespace Cypress {\r\n    interface Chainable {\r\n      mount: typeof mount;\r\n    }\r\n  }\r\n}\r\n\r\nCypress.Commands.add('mount', mount);\r\n\r\n// Example use:\r\n// cy.mount(MyComponent)\r\n",
            "properties": [
                {
                    "name": "mount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "HealthMetrics",
            "id": "interface-HealthMetrics-c2020d4a3a769323293430297a45e142726d9b2b794415fbba02c3bde57456c266a49ccdfc5da4bd5e71f6a57244f0c0a1541adfbf0e75761f326d016c33a9f6",
            "file": "src/app/core/health-metrics.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface HealthMetrics {\r\n  status: 'UP' | 'DOWN';\r\n}\r\n",
            "properties": [
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"UP\" | \"DOWN\"",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "UserMetrics",
            "id": "interface-UserMetrics-8987c0db8b4e35e93f74a067a4bfba3818536c74a431875a3c56c38708fd7654b308e1e11dff2df934853d239715f6288cff13c3e113b9780194f6dd5c983762",
            "file": "src/app/core/user-metrics.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface UserMetrics {\r\n  users: number;\r\n}\r\n",
            "properties": [
                {
                    "name": "users",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "TelemetryService",
            "id": "injectable-TelemetryService-c588267b38b8e92d8458b6c15312ee2133f15856a608e68e8e1e9e9eb064fcec70809f3c2b231ece521013d76f1815814817eafe3b95b1db4e49e6226a31b1ba",
            "file": "src/app/core/telemetry.service.ts",
            "properties": [
                {
                    "name": "HEALTH_ENDPOINT",
                    "defaultValue": "environment.telemetryUrl + 'health'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        121,
                        124,
                        144
                    ]
                },
                {
                    "name": "USERS_ENDPOINT",
                    "defaultValue": "environment.telemetryUrl + 'users'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        121,
                        124,
                        144
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getHealthMetrics",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getUserMetrics",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { environment } from '../../environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { HealthMetrics } from './health-metrics';\r\nimport { UserMetrics } from './user-metrics';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TelemetryService {\r\n  private static readonly HEALTH_ENDPOINT = environment.telemetryUrl + 'health';\r\n  private static readonly USERS_ENDPOINT = environment.telemetryUrl + 'users';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  public getHealthMetrics() {\r\n    return this.http.get<HealthMetrics>(TelemetryService.HEALTH_ENDPOINT);\r\n  }\r\n\r\n  public getUserMetrics() {\r\n    return this.http.get<UserMetrics>(TelemetryService.USERS_ENDPOINT);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-d3655b1e5a303710cd68a9482b64606589d3d41e4c367a7c2ad3c8e895c46fb5f57aa3474304c895eff522a41536b0454a762bd80d3081afe09b1553ddaa1e5c",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<nav-bar></nav-bar>\r\n<router-outlet></router-outlet>\r\n"
        },
        {
            "name": "HomeComponent",
            "id": "component-HomeComponent-1cb49d40351c23e2b2fe43c07adecd6789274b330f57717370a472657999152a900b5dea14356797ec761b6b32869e7aa1ad309a2ab2aa48d267c2ff8d81cd98",
            "file": "src/app/home/home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-home",
            "styleUrls": [
                "./home.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./home.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "appStatus$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<\"UP\" | \"DOWN\">",
                    "optional": true,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "userCount$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<number>",
                    "optional": true,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { Observable, pluck } from 'rxjs';\r\n\r\nimport { TelemetryService } from '../core/telemetry.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  appStatus$?: Observable<'UP' | 'DOWN'>;\r\n  userCount$?: Observable<number>;\r\n\r\n  constructor(private metrics: TelemetryService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.userCount$ = this.metrics.getUserMetrics().pipe(pluck('users'));\r\n    this.appStatus$ = this.metrics.getHealthMetrics().pipe(pluck('status'));\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./home.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "metrics",
                        "type": "TelemetryService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "metrics",
                        "type": "TelemetryService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "Status: {{ appStatus$ | async }}\r\n\r\nUsers: {{ userCount$ | async }}\r\n"
        },
        {
            "name": "NavBarComponent",
            "id": "component-NavBarComponent-a26ebfa1549483b7f7ce5078f1c3e236397428ee6ba013271ea044bd47098f87be9abdde7173468b56a73de3d229867ad04bff3267b9ecb3ce5348ef53039c4b",
            "file": "src/app/core/nav-bar/nav-bar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "nav-bar",
            "styleUrls": [
                "./nav-bar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./nav-bar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "loggedIn",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'nav-bar',\r\n  templateUrl: './nav-bar.component.html',\r\n  styleUrls: ['./nav-bar.component.scss']\r\n})\r\nexport class NavBarComponent {\r\n  loggedIn = false\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/assets/styles/colors\";\r\n\r\ndiv {\r\n  background-color: $primary-darkest;\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n  & img {\r\n    margin: auto 0 auto 10px;\r\n    height: 30px;\r\n    cursor: pointer;\r\n  }\r\n\r\n  & button {\r\n    margin: 5px;\r\n  }\r\n}\r\n",
                    "styleUrl": "./nav-bar.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div>\r\n  <img src=\"favicon.svg\" alt=\"logo\" routerLink=\"/\">\r\n  <button *ngIf=\"!loggedIn\" mat-stroked-button color=\"accent\">Log in</button>\r\n  <button *ngIf=\"loggedIn\" mat-stroked-button color=\"accent\">Log out</button>\r\n</div>\r\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-a88cb0564af23558bf7e56b30a06b084e6ad3077f6d743872b7c674b9deaa653e779282bb2053db77874b40abdc7883437d6d00778e71f8d24445990682ef294",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppComponent } from '@app/app.component';\r\nimport { HomeComponent } from '@app/home/home.component';\r\nimport { CoreModule } from '@app/core/core.module';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent, HomeComponent],\r\n  imports: [BrowserModule, CoreModule],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "HomeComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CoreModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-7e81aa756f44545cbbf68ced94d678634d007342a818da7f7570971bc869a92732c3b8e9f35baf9c54824311b38747713cff21d87947930616d8ba4e37d52c85",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/core/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { HomeComponent } from '../home/home.component';\r\n\r\nconst routes: Routes = [{ path: '', component: HomeComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CoreModule",
            "id": "module-CoreModule-2ff5536cc6d0ad49d6282ce26615d2a715abcdd1458adde3fc532fd3b84cb1cfb835ba2efa44b3aa8e846ce68b9b885c33b7a4d34058442e6e50fd8f517506f1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/core/core.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\n\r\n@NgModule({\r\n  declarations: [NavBarComponent],\r\n  imports: [\r\n    CommonModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    MatButtonModule\r\n  ],\r\n  exports: [AppRoutingModule, NavBarComponent, BrowserAnimationsModule]\r\n})\r\nexport class CoreModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "NavBarComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "NavBarComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SharedModule",
            "id": "module-SharedModule-ae235678f3a4701b4ce3500c49d2f3b724ab6f505c561b2276acacad5fc77cf981e43c466927b4890123da4dd1ecb916352e6e8ea041ef1338414d7fd9371fbf",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/shared.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [CommonModule],\r\n  exports: [CommonModule]\r\n})\r\nexport class SharedModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/nav-bar/nav-bar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: true,\r\n  apiUrl: 'http://localhost:8080/toolbox-service/',\r\n  telemetryUrl: 'http://localhost:8080/toolbox-service/metrics/'\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: false,\r\n  apiUrl: 'http://localhost:4200/toolbox-service/',\r\n  telemetryUrl: 'http://localhost:4200/toolbox-service/metrics/'\r\n}"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/nav-bar/nav-bar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/nav-bar/nav-bar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: {\r\n    ...args\r\n  },\r\n})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/core/nav-bar/nav-bar.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/nav-bar/nav-bar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/nav-bar/nav-bar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/nav-bar/nav-bar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: {\r\n    ...args\r\n  },\r\n})"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true,\r\n  apiUrl: 'http://localhost:8080/toolbox-service/',\r\n  telemetryUrl: 'http://localhost:8080/toolbox-service/metrics/'\r\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false,\r\n  apiUrl: 'http://localhost:4200/toolbox-service/',\r\n  telemetryUrl: 'http://localhost:4200/toolbox-service/metrics/'\r\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/core/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "",
                        "component": "HomeComponent"
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "cypress/support/component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Chainable",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/health-metrics.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "HealthMetrics",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/nav-bar/nav-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavBarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/nav-bar/nav-bar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/nav-bar/nav-bar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/nav-bar/nav-bar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/telemetry.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TelemetryService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/user-metrics.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "UserMetrics",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/home/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}